{% extends "sprout/notifications/_layouts/base" %}
{% import "_includes/forms" as forms %}
{% import "sprout/fields/_includes/forms" as sproutFields %}

{% set selectedSubnavItem = 'settings' %}

{% if craft.app.request.getSegment(5) == 'new' %}
    {% set title = "New Campaign Type"|t('sprout') %}
{% else %}
    {% set title = "Edit Campaign Type"|t('sprout') %}
{% endif %}

{% set crumbs = [
    { label: "Campaign Types"|t('sprout'), url: cpUrl('sprout/settings/campaigns/campaign-types') }
] %}

{% set fullPageForm = true %}

{% set saveShortcutRedirect = (campaignTypeId != 'new') ? 'sprout/settings/campaigns/campaign-types/edit/' ~
    campaignTypeId : 'sprout/settings/campaign-types/edit/{id}' %}
{% block actionButton %}
    <div class="btngroup submit first">
        <input type="submit" class="btn submit"
            value="{{ 'Save Campaign'|t('sprout') }}"/>
    </div>
{% endblock %}

{% set content %}

    <input type="hidden" name="action"
        value="sprout/campaign-type/save-campaign-type">
    {{ redirectInput("sprout/settings/campaigns/campaign-types") }}
    <input type="hidden" name="campaignTypeId" value="{{ campaignTypeId }}">

    {% if mailers %}

        {{ forms.textField({
            label: "Campaign Type Name"|t('sprout'),
            id: 'name',
            name: 'sproutCampaign[name]',
            instructions: "Human readable name for this Campaign Type"|t('sprout'),
            value: (campaignType is defined ? campaignType.name : null),
            autofocus: true,
            required: true,
            first: true,
            errors: (campaignType is defined ? campaignType.getErrors('name') : null)
        }) }}

        {{ forms.textField({
            label: "Campaign Type Handle"|t('sprout'),
            id: 'handle',
            name: 'sproutCampaign[handle]',
            instructions: "How you'll refer to this Campaign Type in the templates."|t('sprout'),
            value: (campaignType is defined ? campaignType.handle : null),
            required: true,
            errors: (campaignType is defined ? campaignType.getErrors('handle') : null)
        }) }}

        {{ forms.selectField({
            label: "Mailer"|t('sprout'),
            instructions: 'How you would like to send this email. Add a new Mailer via the Plugin Store or create your own.',
            id: 'mailer',
            name: 'sproutCampaign[mailer]',
            required: true,
            options: mailers,
            value: (campaignType is defined ? campaignType.mailer : null),
            errors: (campaignType is defined ? campaignType.getErrors('mailer') : null)
        }) }}

        {% set templateOptions = sprout.email.getEmailTemplateOptions(campaignType) %}

        {{ forms.field({
            label: "Email Templates"|t('sprout'),
            instructions: "The Email Templates that will be used to display your email."|t('sprout'),
            errors: campaignType is defined ? campaignType.getErrors('emailTemplateId') : null,
        }, sproutFields.selectOther({
            name: 'sproutCampaign[emailTemplateId]',
            options: templateOptions,
            value: campaignType is defined ? campaignType.emailTemplateId : null,
            otherPlaceholderText: '_email/email-template-folder'|t('sprout')
        })) }}

        {# @todo - add support for copying a partial template #}
        {#{{ forms.textField({#}
        {#label: "Email Copy/Paste Template"|t,#}
        {#id: 'templateCopyPaste',#}
        {#name: 'sproutEmail[templateCopyPaste]',#}
        {#instructions: "The template to use if you want to copy only part of your template.  The text version of the Copy/Paste content will use the same template name and append .txt"|t,#}
        {#placeholder: 'email/copypaste-template',#}
        {#value: (campaignType is defined ? campaignType.templateCopyPaste : null),#}
        {#errors: (campaignType is defined ? campaignType.getErrors('templateCopyPaste') : null)#}
        {#}) }}#}

        <hr>

        {{ forms.checkboxField({
            label: "Campaign Emails of this type have their own URLs"|t('sprout'),
            id: 'hasUrls',
            name: 'sproutCampaign[hasUrls]',
            checked: (campaignType is defined ? campaignType.hasUrls : 0),
            toggle: 'url-settings'
        }) }}

        <div id="url-settings"
            class="nested-fields{% if not campaignType.hasUrls %} hidden{% endif %}">

            {{ forms.textField({
                label: "Email URL Format"|t('sprout'),
                instructions: 'What the online version of the Campaign Email URLs should look like. You can include tags that output email properties, such as {slug} or {postDate|date("Y")}.'|t('sprout'),
                placeholder: 'email/{slug}',
                name: 'sproutCampaign[urlFormat]',
                value: (campaignType is defined ? campaignType.urlFormat : null),
                errors: (campaignType is defined ? campaignType.getErrors('urlFormat') :
                null)
            }) }}

        </div>

        <hr>

        {{ forms.checkboxField({
            label: "Add a custom format to the Subject field?"|t('sprout'),
            id: 'hasAdvancedTitles',
            name: 'sproutCampaign[hasAdvancedTitles]',
            checked: (campaignType is defined ? campaignType.hasAdvancedTitles : 0),
            toggle: 'advancedtitle-settings'
        }) }}

        <div id="advancedtitle-settings"
            class="nested-fields{% if not campaignType.hasAdvancedTitles %} hidden{% endif %}">

            {{ forms.textField({
                label: 'Subject Format'|t('sprout'),
                instructions: 'What the auto-generated email Subject should look like. You can include tags that output email properties, such as {code}.'|t({ code:
                    '<code>{myCustomField}</code>' }),
                id: 'titleFormat',
                name: 'sproutCampaign[titleFormat]',
                value: (campaignType is defined ? campaignType.titleFormat : null),
                errors: (campaignType is defined ? campaignType.getErrors('titleFormat') :
                null),
            }) }}

        </div>

        <hr>

        {% include "_includes/fieldlayoutdesigner" with {
            fieldLayout: campaignType.getFieldLayout(),
        } only %}

    {% else %}

        <h2>{{ "Setup your first Campaign Type."|t('sprout') }}</h2>

        <p>Install and setup a Mailer Service to create your first Campaign
            Type. Mailers are available as
            separate plugins and can be downloaded from the links listed in the
            <a href="{{ url
                ('sprout/settings/campaigns/mailers') }}">{{ "Mailer
        Settings"|t('sprout') }}</a>.</p>

    {% endif %}
{% endset %}

{% if campaignType is not defined or not campaignType.handle %}
    {% js %}
        window.slugGenerator = new Craft.SlugGenerator('#name', '#handle');
    {% endjs %}
{% endif %}
